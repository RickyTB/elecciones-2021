{"version":3,"sources":["data/tables.sql","enums/heatmap-type.ts","enums/table.ts","enums/page.ts","components/Map/Map.tsx","components/Toolbar/Toolbar.tsx","components/Layout/Layout.tsx","components/ColorBox/ColorBox.tsx","components/ColorGuide/ColorGuide.tsx","components/DBSelect/DBSelect.tsx","utils/constants.ts","components/DiagramGenerator/DiagramGenerator.tsx","components/BoxPlotBody/BoxPlotBody.tsx","utils/helpers.ts","containers/MapPage/action-types.ts","components/HeatMapControl/HeatMapControl.tsx","components/HeatMapSideBar/HeatMapSideBar.tsx","theme/styles.ts","containers/DiagramPage/DiagramPage.tsx","heatmaps/heatmap.ts","heatmaps/poverty.ts","heatmaps/presidential-results.ts","heatmaps/population.ts","containers/MapPage/heatmap-reducer.ts","containers/MapPage/MapPage.tsx","data/elecciones_provincia.csv","data/elecciones_circunscripcion.csv","data/elecciones_canton.csv","data/elecciones_parroquia.csv","data/elecciones_zona.csv","data/elecciones_junta.csv","data/elecciones_res_presidente.csv","data/pobreza_cantones.csv","data/pobreza_parroquias.csv","bin/db.ts","containers/App/App.tsx","theme/colors.ts","theme/fonts.ts","reportWebVitals.ts","index.tsx"],"names":["module","exports","HeatMapType","Table","Page","MapEvents","onZoomChange","map","useMapEvents","zoom","event","getZoom","defaultStyle","fillOpacity","fillColor","color","weight","opacity","Map","heatMapList","heatMapMap","useState","setZoom","flag","setFlag","useEffect","MapContainer","center","style","height","flex","slice","reverse","heatMapInfo","index","active","GeoJSON","data","cantonesData","onEachFeature","type","handleCantonFeature","provinciasData","handleProvinciaFeature","Toolbar","currentPage","onPageChange","bg","useColorModeValue","as","p","justify","width","boxShadow","zIndex","size","isAttached","variant","colorScheme","title","isActive","MapPage","aria-label","icon","BiMapAlt","onClick","DiagramPage","AiOutlineBoxPlot","Layout","children","d","flexDirection","ColorBox","subtitle","px","py","fontSize","ColorGuide","heatMap","overflow","flexDir","justifyContent","alignItems","minW","props","key","DBSelect","tableName","fkTable","fk","value","onChange","placeholder","label","isDisabled","cirId","options","useMemo","query","alasql","id","mb","fontWeight","option","nombre","IndexPosition","PresidentMap","cand_1","cand_2","cand_3","cand_4","cand_5","cand_6","cand_7","cand_8","cand_9","cand_10","cand_11","cand_12","cand_13","cand_14","cand_15","cand_16","TableAbbrMap","0","1","2","3","4","5","TableMap","BoxPlotBody","ids","provId","cantonId","parrId","zonaId","juntaId","results","reduceRight","prev","current","indexes","array","element","idx","indexOf","push","allIndexes","table","length","object","callback","parsed","reduce","obj","result","i","info","provincia","circunscripcion","canton","zona","junta","codigo","cand","y","marker","outliercolor","line","outlierwidth","name","text","boxpoints","Object","keys","names","arr","layout","filter","Boolean","join","WithCir","initialState","HeatMapActionType","reducer","state","action","position","DiagramGenerator","useReducer","dispatch","handleChange","evt","target","mt","separator","ChevronRight","Provincia","Circunscripcion","includes","Canton","Parroquia","Zona","Junta","HeatMapControl","React","forwardRef","ref","onActiveChange","onOpacityChange","borderWidth","borderRadius","_hover","shadow","checked","defaultChecked","contentEditable","min","max","step","HeatMapSideBar","onReorder","w","onDragEnd","destination","source","droppableId","provided","droppableProps","innerRef","item","draggableId","draggableProps","dragHandleProps","styles","global","body","mode","h","HeatMap","provResultsCache","cantonResultsCache","feature","layer","properties","id_prov","dpa_despro","processProvincias","paintFeature","ID","DPA_DESCAN","processCantones","setOpacity","printSubtitle","PovertyHeatMap","poverty","bindTooltip","toFixed","Math","floor","pobParroquias","pobCantones","pobrezaList","pobreza","findPoverty","6","7","8","9","presPropMap","PresidentialResultsHeatMap","total","order","entries","sort","a","b","entry","loadResults","TestMap","PopulationHeatMap","findIndex","test","reducerMap","Reorder","newState","splice","removed","newValue","ChangeActive","ChangeOpacity","PresidentialResults","Population","Poverty","firstHeatMap","hm","forEach","path","provinciaCsv","circunscripcionCsv","cantonCsv","parroquiaCsv","zonaCsv","juntaCsv","ResPresidente","resultadosCsv","PobCantones","pobCantonesCsv","PobParroquias","pobParroquiasCsv","parseData","Promise","res","error","Papa","download","header","dynamicTyping","complete","tablesSQL","tables","foreignKeys","endsWith","foreignKey","theme","extendTheme","colors","brand","50","100","200","300","400","500","600","700","800","900","fonts","heading","mono","pages","App","ready","setReady","page","setPage","initDb","then","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5b2ecff4.chunk.js","sourcesContent":["module.exports = \"create table IF NOT EXISTS provincia (\\r\\n  id integer not null primary key,\\r\\n  nombre TEXT not null,\\r\\n  circunscripcion boolean not null\\r\\n);\\r\\n\\r\\ncreate table IF NOT EXISTS circunscripcion (\\r\\n  id integer not null primary key,\\r\\n  codigo integer not null,\\r\\n  nombre TEXT not null,\\r\\n  provinciaId integer not null,\\r\\n  FOREIGN KEY (provinciaId) REFERENCES provincia (id)\\r\\n);\\r\\n\\r\\ncreate table IF NOT EXISTS canton (\\r\\n  id integer not null primary key,\\r\\n  codigo integer not null,\\r\\n  nombre TEXT not null,\\r\\n  provinciaId integer not null,\\r\\n  cirId integer,\\r\\n  FOREIGN KEY (provinciaId) REFERENCES provincia (id),\\r\\n  FOREIGN KEY (cirId) REFERENCES circunscripcion (id)\\r\\n);\\r\\n\\r\\ncreate table IF NOT EXISTS parroquia (\\r\\n  id integer not null primary key,\\r\\n  codigo integer not null,\\r\\n  nombre TEXT not null,\\r\\n  cantonId integer not null,\\r\\n  FOREIGN KEY (cantonId) REFERENCES canton (id)\\r\\n);\\r\\n\\r\\ncreate table IF NOT EXISTS zona (\\r\\n  id integer not null primary key,\\r\\n  codigo integer not null,\\r\\n  nombre TEXT not null,\\r\\n  parroquiaId integer not null,\\r\\n  FOREIGN KEY (parroquiaId) REFERENCES parroquia (id)\\r\\n);\\r\\n\\r\\ncreate table IF NOT EXISTS junta (\\r\\n  id integer not null primary key,\\r\\n  codigo integer not null,\\r\\n  nombre TEXT not null,\\r\\n  zonaId integer not null,\\r\\n  FOREIGN KEY (zonaId) REFERENCES zona (id)\\r\\n);\\r\\n\\r\\ncreate table IF NOT EXISTS res_presidente (\\r\\n  id integer not null primary key,\\r\\n  cand_1 integer not null,\\r\\n  cand_2 integer not null,\\r\\n  cand_3 integer not null,\\r\\n  cand_4 integer not null,\\r\\n  cand_5 integer not null,\\r\\n  cand_6 integer not null,\\r\\n  cand_7 integer not null,\\r\\n  cand_8 integer not null,\\r\\n  cand_9 integer not null,\\r\\n  cand_10 integer not null,\\r\\n  cand_11 integer not null,\\r\\n  cand_12 integer not null,\\r\\n  cand_13 integer not null,\\r\\n  cand_14 integer not null,\\r\\n  cand_15 integer not null,\\r\\n  cand_16 integer not null,\\r\\n  total_suf integer not null,\\r\\n  blanco integer not null,\\r\\n  nulo integer not null,\\r\\n  juntaId integer not null,\\r\\n  FOREIGN KEY (juntaId) REFERENCES junta (id)\\r\\n);\\r\\n\\r\\ncreate table IF NOT EXISTS pob_cantones (\\r\\n  codigo integer not null primary key,\\r\\n  nombre TEXT not null,\\r\\n  no_pobres integer not null,\\r\\n  pobres integer not null,\\r\\n  total integer not null,\\r\\n  cantonId integer not null,\\r\\n  FOREIGN KEY (cantonId) REFERENCES canton (id)\\r\\n);\\r\\n\\r\\ncreate table IF NOT EXISTS pob_parroquias (\\r\\n  codigo integer not null primary key,\\r\\n  nombre TEXT not null,\\r\\n  no_pobres integer not null,\\r\\n  pobres integer not null,\\r\\n  total integer not null,\\r\\n  parroquiaId integer not null,\\r\\n  FOREIGN KEY (parroquiaId) REFERENCES parroquia (id)\\r\\n);\"","export enum HeatMapType {\r\n  Poverty = \"poverty\",\r\n  PresidentialResults = \"pres-results\",\r\n  Population = \"population\",\r\n}\r\n","export enum Table {\r\n  Provincia = \"provincia\",\r\n  Circunscripcion = \"circunscripcion\",\r\n  Canton = \"canton\",\r\n  Parroquia = \"parroquia\",\r\n  Zona = \"zona\",\r\n  Junta = \"junta\",\r\n  ResPresidente = \"res_presidente\",\r\n  PobCantones = \"pob_cantones\",\r\n  PobParroquias = \"pob_parroquias\",\r\n}\r\n","export enum Page {\r\n  MapPage,\r\n  DiagramPage,\r\n}\r\n","import { MapContainer, GeoJSON, useMapEvents } from \"react-leaflet\";\r\nimport \"leaflet/dist/leaflet.css\";\r\nimport * as cantonesData from \"../../data/ecuador_cantones.json\";\r\nimport * as provinciasData from \"../../data/ecuador_provincias.json\";\r\nimport { useState } from \"react\";\r\nimport \"./Map.css\";\r\nimport { HeatMap } from \"../../heatmaps\";\r\nimport { HeatMapType } from \"../../enums\";\r\nimport { HeatMapInfo } from \"../../models\";\r\nimport { useEffect } from \"react\";\r\n\r\nexport interface MapProps {\r\n  heatMapList: HeatMapInfo[];\r\n  heatMapMap: Record<HeatMapType, HeatMap>;\r\n}\r\n\r\ninterface MapEventsProps {\r\n  onZoomChange: (zoom: number) => void;\r\n}\r\n\r\nconst MapEvents: React.FC<MapEventsProps> = ({ onZoomChange }) => {\r\n  const map = useMapEvents({\r\n    zoom(event) {\r\n      onZoomChange(map.getZoom());\r\n    },\r\n  });\r\n  return null;\r\n};\r\n\r\nconst defaultStyle = {\r\n  fillOpacity: 1,\r\n  fillColor: \"#fff\",\r\n  color: \"black\",\r\n  weight: 2,\r\n  opacity: 0.6,\r\n};\r\n\r\nconst Map: React.FC<MapProps> = ({ heatMapList, heatMapMap }) => {\r\n  const [zoom, setZoom] = useState(6);\r\n  const [flag, setFlag] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setFlag((flag) => !flag);\r\n  }, [heatMapList]);\r\n  return (\r\n    <MapContainer\r\n      center={[-2.778, -83.54]}\r\n      zoom={zoom}\r\n      style={{ height: \"100%\", flex: 1 }}\r\n    >\r\n      {heatMapList\r\n        .slice(0)\r\n        .reverse()\r\n        .map((heatMapInfo, index) =>\r\n          heatMapInfo.active ? (\r\n            zoom > 8 ? (\r\n              <GeoJSON\r\n                data={cantonesData.features as any}\r\n                key={`${heatMapInfo.type}-cantones-${flag}`}\r\n                onEachFeature={heatMapMap[heatMapInfo.type].handleCantonFeature}\r\n                style={defaultStyle}\r\n              />\r\n            ) : (\r\n              <GeoJSON\r\n                data={provinciasData.features as any}\r\n                key={`${heatMapInfo.type}-provincias-${flag}`}\r\n                onEachFeature={\r\n                  heatMapMap[heatMapInfo.type].handleProvinciaFeature\r\n                }\r\n                style={defaultStyle}\r\n              />\r\n            )\r\n          ) : null\r\n        )}\r\n      <MapEvents onZoomChange={setZoom} />\r\n    </MapContainer>\r\n  );\r\n};\r\n\r\nexport default Map;\r\n","import {\r\n  Box,\r\n  ButtonGroup,\r\n  Flex,\r\n  Heading,\r\n  Icon,\r\n  IconButton,\r\n  useColorModeValue,\r\n} from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\nimport { Page } from \"../../enums\";\r\nimport { BiMapAlt } from \"react-icons/bi\";\r\nimport { AiOutlineBoxPlot } from \"react-icons/ai\";\r\n\r\nexport interface ToolbarProps {\r\n  className?: string;\r\n  currentPage: Page;\r\n  onPageChange: (page: Page) => void;\r\n}\r\n\r\nconst Toolbar: React.FC<ToolbarProps> = ({ currentPage, onPageChange }) => {\r\n  const bg = useColorModeValue(\"brand.600\", \"brand.300\");\r\n  const color = useColorModeValue(\"white\", \"gray.800\");\r\n  return (\r\n    <Flex\r\n      as=\"nav\"\r\n      p={2}\r\n      justify=\"space-between\"\r\n      bg={bg}\r\n      width=\"full\"\r\n      boxShadow=\"sm\"\r\n      zIndex=\"sticky\"\r\n    >\r\n      <Box p=\"2\">\r\n        <Heading size=\"md\" color={color}>\r\n          Elecciones 2021\r\n        </Heading>\r\n      </Box>\r\n      <Box>\r\n        <ButtonGroup isAttached variant=\"solid\" colorScheme=\"teal\">\r\n          <IconButton\r\n            title=\"Mostrar mapa\"\r\n            isActive={currentPage === Page.MapPage}\r\n            aria-label=\"Show map\"\r\n            icon={<Icon as={BiMapAlt} />}\r\n            onClick={() => onPageChange(Page.MapPage)}\r\n          />\r\n          <IconButton\r\n            title=\"Mostrar diagrama\"\r\n            isActive={currentPage === Page.DiagramPage}\r\n            aria-label=\"Show diagram\"\r\n            icon={<Icon as={AiOutlineBoxPlot} />}\r\n            onClick={() => onPageChange(Page.DiagramPage)}\r\n          />\r\n        </ButtonGroup>\r\n      </Box>\r\n    </Flex>\r\n  );\r\n};\r\n\r\nexport default Toolbar;\r\n","import React from \"react\";\r\nimport { Toolbar } from \"../Toolbar\";\r\nimport { Box } from \"@chakra-ui/react\";\r\nimport { Page } from \"../../enums\";\r\n\r\nexport interface LayoutProps {\r\n  currentPage: Page;\r\n  onPageChange: (page: Page) => void;\r\n}\r\n\r\nconst Layout: React.FC<LayoutProps> = ({\r\n  children,\r\n  currentPage,\r\n  onPageChange,\r\n}) => {\r\n  return (\r\n    <Box d=\"flex\" flexDirection=\"column\" height=\"100vh\">\r\n      <Toolbar currentPage={currentPage} onPageChange={onPageChange} />\r\n      {children}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import { Box, Heading, Text } from \"@chakra-ui/react\";\r\n\r\nexport interface ColorBoxProps {\r\n  title: string;\r\n  subtitle: string;\r\n  bg: string;\r\n  color: string;\r\n}\r\n\r\nconst ColorBox: React.FC<ColorBoxProps> = ({ title, subtitle, bg, color }) => {\r\n  return (\r\n    <Box bg={bg} color={color} flex=\"1\" px={3} py={2}>\r\n      <Heading as=\"h3\" size=\"sm\">\r\n        {title}\r\n      </Heading>\r\n      <Text fontSize=\"sm\">{subtitle}</Text>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ColorBox;\r\n","import { Box, Flex } from \"@chakra-ui/react\";\r\nimport { ColorBox } from \"../ColorBox\";\r\nimport { HeatMap } from \"../../heatmaps\";\r\nimport React from \"react\";\r\n\r\nexport interface ColorGuideProps {\r\n  heatMap: HeatMap;\r\n}\r\n\r\nconst ColorGuide: React.FC<ColorGuideProps> = ({ heatMap }) => (\r\n  <Box width=\"full\" zIndex=\"banner\" boxShadow=\"base\" overflow=\"auto\">\r\n    <Flex\r\n      flexDir=\"row\"\r\n      justifyContent=\"space-evenly\"\r\n      alignItems=\"stretch\"\r\n      minW=\"1080px\"\r\n      width=\"100%\"\r\n    >\r\n      {heatMap.props.map((props, index) => (\r\n        <ColorBox {...props} key={index} />\r\n      ))}\r\n    </Flex>\r\n  </Box>\r\n);\r\n\r\nexport default ColorGuide;\r\n","import { FormControl, FormLabel, Select } from \"@chakra-ui/react\";\r\nimport { useMemo } from \"react\";\r\nimport alasql from \"alasql\";\r\n\r\nexport interface DBSelectProps {\r\n  tableName: string;\r\n  fk?: number | string;\r\n  fkTable?: string;\r\n  value: string;\r\n  onChange: React.ChangeEventHandler<HTMLSelectElement>;\r\n  placeholder?: string;\r\n  label: string;\r\n  isDisabled?: boolean;\r\n  cirId?: number | string;\r\n}\r\n\r\nconst DBSelect: React.FC<DBSelectProps> = ({\r\n  tableName,\r\n  fkTable,\r\n  fk,\r\n  value,\r\n  onChange,\r\n  placeholder = \"Todas\",\r\n  label,\r\n  isDisabled = false,\r\n  cirId,\r\n}) => {\r\n  const options = useMemo(() => {\r\n    if (isDisabled) return [];\r\n    const query = `SELECT ${tableName}.id, ${tableName}.nombre FROM ${tableName} \r\n    ${\r\n      fk\r\n        ? `JOIN ${fkTable} ON ${tableName}.${fkTable}Id = ${fkTable}.id WHERE ${fkTable}.id = ${fk}`\r\n        : \"\"\r\n    } ${cirId ? `AND ${tableName}.cirId = ${cirId}` : \"\"}`;\r\n    return alasql(query);\r\n  }, [isDisabled, fk, cirId]);\r\n\r\n  return (\r\n    <FormControl id={`form-${tableName}`} mb={4} isDisabled={isDisabled}>\r\n      <FormLabel fontWeight=\"bold\" mb={0}>{label}</FormLabel>\r\n      <Select placeholder={placeholder} onChange={onChange} value={value} bg=\"white\">\r\n        {options.map((option: any) => (\r\n          <option value={option.id} key={option.id}>\r\n            {option.nombre}\r\n          </option>\r\n        ))}\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default DBSelect;\r\n","export const PresidentMap: Record<string, string> = {\r\n  cand_1: \"ANDRES ARAUZ GALARZA\",\r\n  cand_2: \"LUCIO GUTIERREZ\",\r\n  cand_3: \"GERSON ALMEIDA\",\r\n  cand_4: \"ISIDRO PERFECTO ROMERO CARBO\",\r\n  cand_5: \"CARLOS SAGNAY DE LA BASTIDA\",\r\n  cand_6: \"XAVIER HERVAS\",\r\n  cand_7: \"PEDRO JOSE FREILE\",\r\n  cand_8: \"CESAR MONTUFAR\",\r\n  cand_9: \"YAKU PEREZ\",\r\n  cand_10: \"GIOVANNY ANDRADE SALVADOR\",\r\n  cand_11: \"GUSTAVO LARREA CABRERA\",\r\n  cand_12: \"GUILLERMO LASSO MENDOZA\",\r\n  cand_13: \"GUILLERMO CELI\",\r\n  cand_14: \"JUAN FERNANDO VELASCO TORRES\",\r\n  cand_15: \"PAUL ERNESTO CARRASCO\",\r\n  cand_16: \"XIMENA PEÑA PACHECO\",\r\n};\r\n","import { Box, Breadcrumb, BreadcrumbItem, Text } from \"@chakra-ui/react\";\r\nimport React, { useReducer } from \"react\";\r\nimport { DBSelect } from \"../DBSelect\";\r\nimport { BoxPlotBody } from \"../BoxPlotBody\";\r\nimport { ChevronRightIcon } from \"@chakra-ui/icons\";\r\n\r\nexport interface DiagramGeneratorProps {}\r\n\r\nconst WithCir = [\"9\", \"13\", \"17\"];\r\n\r\nconst initialState = [\"\", \"\", \"\", \"\", \"\", \"\"];\r\n\r\nenum IndexPosition {\r\n  Provincia = 0,\r\n  Circunscripcion = 1,\r\n  Canton = 2,\r\n  Parroquia = 3,\r\n  Zona = 4,\r\n  Junta = 5,\r\n}\r\ninterface Action {\r\n  position: IndexPosition;\r\n  value: string;\r\n}\r\n\r\nconst reducer = (state: typeof initialState, action: Action) =>\r\n  state.map((current, index) =>\r\n    index === action.position\r\n      ? action.value\r\n      : index > action.position\r\n      ? \"\"\r\n      : current\r\n  );\r\n\r\nconst DiagramGenerator: React.FC<DiagramGeneratorProps> = () => {\r\n  const [ids, dispatch] = useReducer(reducer, initialState);\r\n\r\n  const handleChange = (position: IndexPosition) => (evt: any) =>\r\n    dispatch({ position, value: evt.target.value });\r\n\r\n  return (\r\n    <>\r\n      <Breadcrumb\r\n        mt={4}\r\n        mb={2}\r\n        separator={<ChevronRightIcon color=\"gray.500\" />}\r\n      >\r\n        <BreadcrumbItem>\r\n          <DBSelect\r\n            tableName=\"provincia\"\r\n            value={ids[IndexPosition.Provincia]}\r\n            onChange={handleChange(IndexPosition.Provincia)}\r\n            placeholder=\"Seleccione una provincia\"\r\n            label=\"Provincia\"\r\n          />\r\n        </BreadcrumbItem>\r\n        <BreadcrumbItem>\r\n          <DBSelect\r\n            tableName=\"circunscripcion\"\r\n            value={ids[IndexPosition.Circunscripcion]}\r\n            onChange={handleChange(IndexPosition.Circunscripcion)}\r\n            placeholder=\"Seleccione una circunscripción\"\r\n            label=\"Circunscripción\"\r\n            fkTable=\"provincia\"\r\n            fk={ids[IndexPosition.Provincia]}\r\n            isDisabled={!WithCir.includes(ids[IndexPosition.Provincia])}\r\n          />\r\n        </BreadcrumbItem>\r\n        <BreadcrumbItem>\r\n          <DBSelect\r\n            tableName=\"canton\"\r\n            value={ids[IndexPosition.Canton]}\r\n            onChange={handleChange(IndexPosition.Canton)}\r\n            placeholder=\"Todos\"\r\n            label=\"Cantón\"\r\n            fkTable=\"provincia\"\r\n            fk={ids[IndexPosition.Provincia]}\r\n            isDisabled={!ids[IndexPosition.Provincia]}\r\n            cirId={ids[IndexPosition.Circunscripcion]}\r\n          />\r\n        </BreadcrumbItem>\r\n        <BreadcrumbItem>\r\n          <DBSelect\r\n            tableName=\"parroquia\"\r\n            value={ids[IndexPosition.Parroquia]}\r\n            onChange={handleChange(IndexPosition.Parroquia)}\r\n            label=\"Parroquia\"\r\n            fkTable=\"canton\"\r\n            fk={ids[IndexPosition.Canton]}\r\n            isDisabled={!ids[IndexPosition.Canton]}\r\n          />\r\n        </BreadcrumbItem>\r\n        <BreadcrumbItem>\r\n          <DBSelect\r\n            tableName=\"zona\"\r\n            value={ids[IndexPosition.Zona]}\r\n            onChange={handleChange(IndexPosition.Zona)}\r\n            label=\"Zona\"\r\n            fkTable=\"parroquia\"\r\n            fk={ids[IndexPosition.Parroquia]}\r\n            isDisabled={!ids[IndexPosition.Parroquia]}\r\n          />\r\n        </BreadcrumbItem>\r\n        <BreadcrumbItem>\r\n          <DBSelect\r\n            tableName=\"junta\"\r\n            value={ids[IndexPosition.Junta]}\r\n            onChange={handleChange(IndexPosition.Junta)}\r\n            label=\"Junta\"\r\n            fkTable=\"zona\"\r\n            fk={ids[IndexPosition.Zona]}\r\n            isDisabled={!ids[IndexPosition.Zona]}\r\n          />\r\n        </BreadcrumbItem>\r\n      </Breadcrumb>\r\n      {ids[IndexPosition.Provincia] ? (\r\n        <BoxPlotBody ids={ids} />\r\n      ) : (\r\n        <Box d=\"flex\" justifyContent=\"center\" alignItems=\"center\" flex={1}>\r\n          <Text color=\"blackAlpha.700\">\r\n            Seleccione una provincia para comenzar\r\n          </Text>\r\n        </Box>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DiagramGenerator;\r\n","import React from \"react\";\r\nimport Plot from \"react-plotly.js\";\r\nimport { useMemo } from \"react\";\r\nimport alasql from \"alasql\";\r\nimport { mapObject, allIndexes } from \"../../utils/helpers\";\r\nimport { PresidentMap } from \"../../utils/constants\";\r\nimport { Box } from \"@chakra-ui/react\";\r\n\r\nexport interface BoxPlotBodyProps {\r\n  ids: string[];\r\n}\r\n\r\ninterface JuntaResult {\r\n  cand_1: number;\r\n  cand_2: number;\r\n  cand_3: number;\r\n  cand_4: number;\r\n  cand_5: number;\r\n  cand_6: number;\r\n  cand_7: number;\r\n  cand_8: number;\r\n  cand_9: number;\r\n  cand_10: number;\r\n  cand_11: number;\r\n  cand_12: number;\r\n  cand_13: number;\r\n  cand_14: number;\r\n  cand_15: number;\r\n  cand_16: number;\r\n  blanco: number;\r\n  nulo: number;\r\n  total_suf: number;\r\n  codigo: number;\r\n  junta: string;\r\n  zona: string;\r\n  zona_id: string;\r\n  parroquia: string;\r\n  canton: string;\r\n  circunscripcion: string;\r\n  provincia: string;\r\n}\r\n\r\ninterface CandResult {\r\n  results: number[];\r\n  info: string[];\r\n}\r\ntype ParsedResult = {\r\n  cand_1: CandResult;\r\n  cand_2: CandResult;\r\n  cand_3: CandResult;\r\n  cand_4: CandResult;\r\n  cand_5: CandResult;\r\n  cand_6: CandResult;\r\n  cand_7: CandResult;\r\n  cand_8: CandResult;\r\n  cand_9: CandResult;\r\n  cand_10: CandResult;\r\n  cand_11: CandResult;\r\n  cand_12: CandResult;\r\n  cand_13: CandResult;\r\n  cand_14: CandResult;\r\n  cand_15: CandResult;\r\n  cand_16: CandResult;\r\n};\r\n\r\nconst TableAbbrMap = {\r\n  0: \"pr\",\r\n  1: \"cr\",\r\n  2: \"c\",\r\n  3: \"p\",\r\n  4: \"z\",\r\n  5: \"j\",\r\n};\r\n\r\nconst TableMap: Record<number, string> = {\r\n  0: \"provincia\",\r\n  1: \"circunscripcion\",\r\n  2: \"canton\",\r\n  3: \"parroquia\",\r\n  4: \"zona\",\r\n  5: \"junta\",\r\n};\r\n\r\nconst BoxPlotBody: React.FC<BoxPlotBodyProps> = ({ ids }) => {\r\n  const [provId, cirId, cantonId, parrId, zonaId, juntaId] = ids;\r\n\r\n  const results = useMemo(() => {\r\n    const id = ids.reduceRight((prev, current) => prev || current);\r\n    const indexes = allIndexes(ids, id);\r\n    //@ts-ignore\r\n    const table = TableAbbrMap[indexes[indexes.length - 1]];\r\n    return alasql(`\r\n    SELECT cand_1,\r\n    cand_2,\r\n    cand_3,\r\n    cand_4,\r\n    cand_5,\r\n    cand_6,\r\n    cand_7,\r\n    cand_8,\r\n    cand_9,\r\n    cand_10,\r\n    cand_11,\r\n    cand_12,\r\n    cand_13,\r\n    cand_14,\r\n    cand_15,\r\n    cand_16,\r\n    blanco,\r\n    nulo,\r\n    total_suf,\r\n    j.codigo       codigo,\r\n    j.nombre       junta,\r\n    TRIM(z.nombre) zona,\r\n    z.id           zona_id,\r\n    p.nombre       parroquia,\r\n    c.nombre       canton,\r\n    cr.nombre      circunscripcion,\r\n    pr.nombre      provincia\r\nFROM res_presidente\r\n      JOIN junta j ON res_presidente.juntaId = j.id\r\n      JOIN zona z ON j.zonaId = z.id\r\n      JOIN parroquia p ON z.parroquiaId = p.id\r\n      JOIN canton c ON p.cantonId = c.id\r\n      LEFT JOIN circunscripcion cr ON c.cirId = cr.id\r\n      JOIN provincia pr ON c.provinciaId = pr.id\r\nWHERE ${table}.id = ${id}\r\nORDER BY res_presidente.juntaId\r\n`) as JuntaResult[];\r\n  }, [provId, cirId, cantonId, parrId, zonaId, juntaId]);\r\n\r\n  const data = useMemo(() => {\r\n    const parsed = results.reduce<ParsedResult>(\r\n      (obj, result) => {\r\n        for (let i = 1; i <= 16; i++) {\r\n          //@ts-ignore\r\n          obj[`cand_${i}`].results.push(result[`cand_${i}`]);\r\n          //@ts-ignore\r\n          obj[`cand_${i}`].info.push([\r\n            \"Provincia: \" + result.provincia,\r\n            \"Circunscripción: \" + (result.circunscripcion || \"N/A\"),\r\n            \"Cantón: \" + result.canton,\r\n            \"Zona: \" + result.zona,\r\n            \"Junta: \" + result.junta,\r\n            \"Código: \" + result.codigo,\r\n          ]);\r\n        }\r\n        return obj;\r\n      },\r\n      {\r\n        cand_1: { results: [], info: [] },\r\n        cand_2: { results: [], info: [] },\r\n        cand_3: { results: [], info: [] },\r\n        cand_4: { results: [], info: [] },\r\n        cand_5: { results: [], info: [] },\r\n        cand_6: { results: [], info: [] },\r\n        cand_7: { results: [], info: [] },\r\n        cand_8: { results: [], info: [] },\r\n        cand_9: { results: [], info: [] },\r\n        cand_10: { results: [], info: [] },\r\n        cand_11: { results: [], info: [] },\r\n        cand_12: { results: [], info: [] },\r\n        cand_13: { results: [], info: [] },\r\n        cand_14: { results: [], info: [] },\r\n        cand_15: { results: [], info: [] },\r\n        cand_16: { results: [], info: [] },\r\n      }\r\n    );\r\n    return mapObject(parsed, (cand, key) => ({\r\n      type: \"box\",\r\n      y: cand.results,\r\n      marker: {\r\n        color: \"rgb(8,81,156)\",\r\n        outliercolor: \"rgba(219, 64, 82, 0.6)\",\r\n        line: {\r\n          outliercolor: \"rgba(219, 64, 82, 1.0)\",\r\n          outlierwidth: 2,\r\n        },\r\n      },\r\n      name: PresidentMap[key],\r\n      text: cand.info,\r\n      boxpoints: \"suspectedoutliers\",\r\n    })) as any;\r\n  }, [results]);\r\n\r\n  const names = useMemo(() => {\r\n    return ids.reduce<string[]>(\r\n      (arr, id, index) => [\r\n        ...arr,\r\n        id\r\n          ? alasql(`SELECT nombre FROM ${TableMap[index]} WHERE id = ${id}`)[0]\r\n              .nombre\r\n          : null,\r\n      ],\r\n      []\r\n    );\r\n  }, [provId, cirId, cantonId, parrId, zonaId, juntaId]);\r\n\r\n  return (\r\n    <Box d=\"flex\" flex={1}>\r\n      <Plot\r\n        data={data}\r\n        layout={{\r\n          title: names.filter(Boolean).join(\" -> \"),\r\n        }}\r\n        style={{ flex: 1 }}\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default BoxPlotBody;\r\n","type ObjectKey = string | number;\r\n\r\nexport const mapObject = <T, U>(\r\n  object: Record<ObjectKey, T>,\r\n  callback: (value: T, key: ObjectKey) => U\r\n): U[] => {\r\n  return Object.keys(object).map((key) => callback(object[key], key));\r\n};\r\n\r\nexport function capitalizeFirstLetter(string: string): string {\r\n  return string.charAt(0).toUpperCase() + string.slice(1);\r\n}\r\n\r\nexport function allIndexes<T>(array: T[], element: T): number[] {\r\n  let indexes = [];\r\n  let idx = array.indexOf(element);\r\n  while (idx != -1) {\r\n    indexes.push(idx);\r\n    idx = array.indexOf(element, idx + 1);\r\n  }\r\n  return indexes;\r\n}\r\n","export enum HeatMapActionType {\r\n  Reorder = \"REORDER\",\r\n  ChangeOpacity = \"CHANGE_OPACITY\",\r\n  ChangeActive = \"CHANGE_ACTIVE\",\r\n}\r\n","import {\r\n  Box,\r\n  Checkbox,\r\n  Slider,\r\n  SliderFilledTrack,\r\n  SliderThumb,\r\n  SliderTrack,\r\n  Text,\r\n} from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\n\r\nexport interface HeatMapControlProps {\r\n  active: boolean;\r\n  opacity: number;\r\n  title: string;\r\n  onActiveChange(value: boolean): void;\r\n  onOpacityChange(value: number): void;\r\n}\r\n\r\nconst HeatMapControl = React.forwardRef<HTMLDivElement, HeatMapControlProps>(\r\n  (\r\n    { active, opacity, title, onActiveChange, onOpacityChange, ...props },\r\n    ref\r\n  ) => {\r\n    const handleActiveChange = (evt: any) => onActiveChange(evt.target.checked);\r\n\r\n    return (\r\n      <Box\r\n        mb={4}\r\n        borderWidth=\"1px\"\r\n        borderRadius=\"lg\"\r\n        py={2}\r\n        px={4}\r\n        bg=\"white\"\r\n        _hover={{ shadow: \"sm\" }}\r\n        ref={ref}\r\n        {...props}\r\n      >\r\n        <Checkbox\r\n          size=\"lg\"\r\n          colorScheme=\"brand\"\r\n          checked={active}\r\n          defaultChecked={active}\r\n          mb={2}\r\n          onChange={handleActiveChange}\r\n        >\r\n          {title}\r\n        </Checkbox>\r\n        <Text as=\"label\" fontSize=\"sm\" d=\"block\" color=\"blackAlpha.800\">\r\n          Opacidad\r\n        </Text>\r\n        <Slider\r\n          contentEditable\r\n          aria-label=\"slider-ex-2\"\r\n          colorScheme=\"teal\"\r\n          value={opacity}\r\n          min={0}\r\n          max={1}\r\n          step={0.1}\r\n          onChange={onOpacityChange}\r\n        >\r\n          <SliderTrack>\r\n            <SliderFilledTrack />\r\n          </SliderTrack>\r\n          <SliderThumb />\r\n        </Slider>\r\n      </Box>\r\n    );\r\n  }\r\n);\r\n\r\nexport default HeatMapControl;\r\n","import { Box, Heading } from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\nimport { HeatMapControl } from \"../HeatMapControl\";\r\nimport { HeatMapInfo } from \"../../models\";\r\nimport {\r\n  DragDropContext,\r\n  Droppable,\r\n  Draggable,\r\n  DropResult,\r\n} from \"react-beautiful-dnd\";\r\n\r\nexport interface HeatMapSideBarProps {\r\n  heatMapList: HeatMapInfo[];\r\n  onReorder: (index: number, newValue: number) => void;\r\n  onActiveChange: (index: number, newValue: boolean) => void;\r\n  onOpacityChange: (index: number, newValue: number) => void;\r\n}\r\n\r\nconst HeatMapSideBar: React.FC<HeatMapSideBarProps> = ({\r\n  heatMapList,\r\n  onReorder,\r\n  onActiveChange,\r\n  onOpacityChange,\r\n}) => {\r\n  const handleDragEnd = (result: DropResult) => {\r\n    if (!result.destination) return;\r\n    onReorder(result.source.index, result.destination.index);\r\n  };\r\n\r\n  return (\r\n    <Box bg=\"whiteAlpha.600\" w=\"20vw\" boxShadow=\"base\" p={4} zIndex={2}>\r\n      <Heading size=\"md\" mb={4}>\r\n        Mapas de calor\r\n      </Heading>\r\n      <DragDropContext onDragEnd={handleDragEnd}>\r\n        <Droppable droppableId=\"droppable\">\r\n          {(provided) => (\r\n            <div {...provided.droppableProps} ref={provided.innerRef}>\r\n              {heatMapList.map((item, index) => (\r\n                <Draggable\r\n                  key={item.type}\r\n                  draggableId={item.type}\r\n                  index={index}\r\n                >\r\n                  {(provided) => (\r\n                    <HeatMapControl\r\n                      ref={provided.innerRef}\r\n                      {...provided.draggableProps}\r\n                      {...provided.dragHandleProps}\r\n                      title={item.title}\r\n                      active={item.active}\r\n                      opacity={item.opacity}\r\n                      onActiveChange={(value) => onActiveChange(index, value)}\r\n                      onOpacityChange={(value) => onOpacityChange(index, value)}\r\n                    />\r\n                  )}\r\n                </Draggable>\r\n              ))}\r\n              {provided.placeholder}\r\n            </div>\r\n          )}\r\n        </Droppable>\r\n      </DragDropContext>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default HeatMapSideBar;\r\n","import { mode } from \"@chakra-ui/theme-tools\";\r\n\r\nexport const styles = {\r\n  global: (props: any) => ({\r\n    body: {\r\n      bg: mode(\"#f9f9fa\", \"gray.800\")(props),\r\n    },\r\n  }),\r\n};\r\n","import { DiagramGenerator } from \"../../components\";\r\nimport { Heading, Box } from \"@chakra-ui/react\";\r\n\r\nexport interface DiagramPageProps {}\r\n\r\nconst DiagramPage: React.FC<DiagramPageProps> = () => {\r\n  return (\r\n    <Box p={4} d=\"flex\" flexDir=\"column\" h=\"100vh\">\r\n      <Heading size=\"lg\">Generador de Diagrama de Caja</Heading>\r\n      <DiagramGenerator />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default DiagramPage;\r\n","import * as geojson from \"geojson\";\r\nimport { Layer } from \"leaflet\";\r\nimport { ColorBoxProps } from \"../components/ColorBox/ColorBox\";\r\n\r\nexport abstract class HeatMap<T = any> {\r\n  abstract readonly props: ColorBoxProps[];\r\n\r\n  private provResultsCache: Record<number, T> = {};\r\n  private cantonResultsCache: Record<number, T> = {};\r\n\r\n  protected opacity: number = 1;\r\n\r\n  handleProvinciaFeature = (\r\n    feature: geojson.Feature<geojson.GeometryObject>,\r\n    layer: Layer\r\n  ) => {\r\n    const id = feature.properties?.id_prov;\r\n    if (id === 25) return;\r\n\r\n    const name = feature.properties?.dpa_despro;\r\n\r\n    const result = this.provResultsCache[id] || this.processProvincias(id);\r\n    this.provResultsCache[id] = result;\r\n\r\n    this.paintFeature(layer, name, result);\r\n  };\r\n\r\n  handleCantonFeature = (\r\n    feature: geojson.Feature<geojson.GeometryObject>,\r\n    layer: Layer\r\n  ) => {\r\n    const id = feature.properties?.ID;\r\n    const name = feature.properties?.DPA_DESCAN;\r\n\r\n    const result = this.cantonResultsCache[id] || this.processCantones(id);\r\n    this.cantonResultsCache[id] = result;\r\n\r\n    this.paintFeature(layer, name, result);\r\n  };\r\n\r\n  protected abstract paintFeature: (\r\n    layer: Layer,\r\n    name: string,\r\n    result: T\r\n  ) => void;\r\n\r\n  protected abstract processProvincias: (id: number) => T;\r\n\r\n  protected abstract processCantones: (id: number) => T;\r\n\r\n  setOpacity = (opacity: number) => {\r\n    this.opacity = opacity;\r\n  };\r\n}\r\n","import alasql from \"alasql\";\r\nimport { Layer } from \"leaflet\";\r\nimport { ColorBoxProps } from \"../components/ColorBox/ColorBox\";\r\nimport { HeatMap } from \"./heatmap\";\r\n\r\nconst printSubtitle = (value: number) =>\r\n  `${value} provincia${value === 1 ? \"\" : \"s\"}`;\r\n\r\nexport class PovertyHeatMap extends HeatMap<number> {\r\n  readonly props: ColorBoxProps[];\r\n\r\n  constructor() {\r\n    super();\r\n    const poverty = this.findPoverty();\r\n    this.props = [\r\n      {\r\n        title: \"0% - 10%\",\r\n        bg: \"#ffe2f1\",\r\n        color: \"black\",\r\n        subtitle: printSubtitle(poverty[0]),\r\n      },\r\n      {\r\n        title: \"10% - 20%\",\r\n        bg: \"#ffb3cf\",\r\n        color: \"black\",\r\n        subtitle: printSubtitle(poverty[1]),\r\n      },\r\n      {\r\n        title: \"20% - 30%\",\r\n        bg: \"#fc83ab\",\r\n        color: \"black\",\r\n        subtitle: printSubtitle(poverty[2]),\r\n      },\r\n      {\r\n        title: \"30% - 40%\",\r\n        bg: \"#f95283\",\r\n        color: \"black\",\r\n        subtitle: printSubtitle(poverty[3]),\r\n      },\r\n      {\r\n        title: \"40% - 50%\",\r\n        bg: \"#f62259\",\r\n        color: \"white\",\r\n        subtitle: printSubtitle(poverty[4]),\r\n      },\r\n      {\r\n        title: \"50% - 60%\",\r\n        bg: \"#dd0939\",\r\n        color: \"white\",\r\n        subtitle: printSubtitle(poverty[5]),\r\n      },\r\n      {\r\n        title: \"60% - 70%\",\r\n        bg: \"#ad0337\",\r\n        color: \"white\",\r\n        subtitle: printSubtitle(poverty[6]),\r\n      },\r\n      {\r\n        title: \"70% - 80%\",\r\n        bg: \"#7c002f\",\r\n        color: \"white\",\r\n        subtitle: printSubtitle(poverty[7]),\r\n      },\r\n      {\r\n        title: \"80% - 90%\",\r\n        bg: \"#4d0021\",\r\n        color: \"white\",\r\n        subtitle: printSubtitle(poverty[8]),\r\n      },\r\n      {\r\n        title: \"90% - 100%\",\r\n        bg: \"#20000d\",\r\n        color: \"white\",\r\n        subtitle: printSubtitle(poverty[9]),\r\n      },\r\n    ];\r\n  }\r\n\r\n  findPoverty() {\r\n    const pobParroquias = alasql(\r\n      `\r\n      SELECT SUM(pobres) pobres, SUM(total) total, provinciaId\r\n      FROM provincia \r\n        JOIN canton ON canton.provinciaId = provincia.id\r\n        JOIN parroquia ON parroquia.cantonId = canton.id\r\n        JOIN pob_parroquias ON pob_parroquias.parroquiaId = parroquia.id\r\n      GROUP BY provinciaId;\r\n    `\r\n    );\r\n\r\n    const pobCantones = alasql(\r\n      `\r\n      SELECT SUM(pobres) pobres, SUM(total) total, provinciaId\r\n      FROM provincia \r\n        JOIN canton ON canton.provinciaId = provincia.id\r\n        JOIN pob_cantones ON pob_cantones.cantonId = canton.id\r\n      GROUP BY provinciaId;\r\n    `\r\n    );\r\n\r\n    const pobrezaList = alasql(\r\n      `\r\n      SELECT SUM(pobres) pobres, SUM(total) total, provinciaId\r\n      FROM ?\r\n      GROUP BY provinciaId;\r\n    `,\r\n      [[...pobParroquias, ...pobCantones]]\r\n    );\r\n\r\n    const resultado = alasql(\r\n      `\r\n      SELECT (pobres / total) pobreza FROM (\r\n        SELECT SUM(pobres) pobres, SUM(total) total\r\n        FROM ?\r\n        GROUP BY provinciaId\r\n      );\r\n    `,\r\n      [pobrezaList]\r\n    ) as any[];\r\n\r\n    return resultado.reduce(\r\n      (obj, { pobreza }) => {\r\n        obj[Math.floor(pobreza * 10)] += 1;\r\n        return obj;\r\n      },\r\n      {\r\n        0: 0,\r\n        1: 0,\r\n        2: 0,\r\n        3: 0,\r\n        4: 0,\r\n        5: 0,\r\n        6: 0,\r\n        7: 0,\r\n        8: 0,\r\n        9: 0,\r\n      }\r\n    );\r\n  }\r\n\r\n  protected paintFeature = (layer: Layer, name: string, poverty: number) => {\r\n    layer.bindTooltip(`\r\n      <h4><strong>${name}</strong></h4>\r\n      <p>Nivel de pobreza: ${(poverty * 100).toFixed(2)}%</p>\r\n    `);\r\n\r\n    (layer as any).options.fillColor = this.props[Math.floor(poverty * 10)].bg;\r\n    (layer as any).options.fillOpacity = this.opacity;\r\n  };\r\n\r\n  protected processProvincias = (id: number) => {\r\n    const pobParroquias = alasql(\r\n      `\r\n      SELECT SUM(pobres) pobres, SUM(total) total, provinciaId\r\n      FROM provincia \r\n        JOIN canton ON canton.provinciaId = provincia.id\r\n        JOIN parroquia ON parroquia.cantonId = canton.id\r\n        JOIN pob_parroquias ON pob_parroquias.parroquiaId = parroquia.id\r\n      WHERE provincia.id = ${id}\r\n      GROUP BY provinciaId;\r\n    `\r\n    );\r\n\r\n    const pobCantones = alasql(\r\n      `\r\n      SELECT SUM(pobres) pobres, SUM(total) total, provinciaId\r\n      FROM provincia \r\n        JOIN canton ON canton.provinciaId = provincia.id\r\n        JOIN pob_cantones ON pob_cantones.cantonId = canton.id\r\n      WHERE provincia.id = ${id}\r\n      GROUP BY provinciaId;\r\n    `\r\n    );\r\n\r\n    const pobrezaList = [...pobParroquias, ...pobCantones];\r\n    const [{ pobreza }] = alasql(\r\n      `\r\n      SELECT (pobres / total) pobreza FROM (\r\n        SELECT SUM(pobres) pobres, SUM(total) total\r\n        FROM ?\r\n      );\r\n    `,\r\n      [pobrezaList]\r\n    );\r\n\r\n    return pobreza;\r\n  };\r\n\r\n  processCantones = (id: number) => {\r\n    const pobParroquias = alasql(\r\n      `\r\n      SELECT SUM(pobres) pobres, SUM(total) total, cantonId\r\n      FROM canton \r\n        JOIN parroquia ON parroquia.cantonId = canton.id\r\n        JOIN pob_parroquias ON pob_parroquias.parroquiaId = parroquia.id\r\n      WHERE canton.id = ${id}\r\n      GROUP BY cantonId;\r\n    `\r\n    );\r\n\r\n    const pobCantones = alasql(\r\n      `\r\n      SELECT SUM(pobres) pobres, SUM(total) total, cantonId\r\n      FROM canton\r\n        JOIN pob_cantones ON pob_cantones.cantonId = canton.id\r\n      WHERE canton.id = ${id}\r\n      GROUP BY cantonId;\r\n    `\r\n    );\r\n\r\n    const pobrezaList = [...pobParroquias, ...pobCantones];\r\n    const [{ pobreza }] = alasql(\r\n      `\r\n      SELECT (pobres / total) pobreza FROM (\r\n        SELECT SUM(pobres) pobres, SUM(total) total\r\n        FROM ?\r\n      );\r\n    `,\r\n      [pobrezaList]\r\n    );\r\n\r\n    return pobreza;\r\n  };\r\n}\r\n","import alasql from \"alasql\";\r\nimport { Layer } from \"leaflet\";\r\nimport { ColorBoxProps } from \"../components/ColorBox/ColorBox\";\r\nimport { PresidentMap } from \"../utils/constants\";\r\nimport { HeatMap } from \"./heatmap\";\r\n\r\nconst presPropMap = {\r\n  cand_1: 0,\r\n  cand_6: 3,\r\n  cand_9: 2,\r\n  cand_12: 1,\r\n};\r\n\r\ntype PresResult = {\r\n  cand_1: number;\r\n  cand_6: number;\r\n  cand_9: number;\r\n  cand_12: number;\r\n  total: number;\r\n};\r\n\r\nexport class PresidentialResultsHeatMap extends HeatMap<PresResult> {\r\n  readonly props: ColorBoxProps[];\r\n\r\n  constructor() {\r\n    super();\r\n    const results = this.loadResults();\r\n\r\n    this.props = [\r\n      {\r\n        title: \"Andrés Arauz\",\r\n        bg: \"#f58634\",\r\n        color: \"black\",\r\n        subtitle: `${((results.cand_1 / results.total) * 100).toFixed(2)}%`,\r\n      },\r\n      {\r\n        title: \"Guillermo Lasso\",\r\n        bg: \"#1a508b\",\r\n        color: \"white\",\r\n        subtitle: `${((results.cand_12 / results.total) * 100).toFixed(2)}%`,\r\n      },\r\n      {\r\n        title: \"Yaku Perez\",\r\n        bg: \"#00af91\",\r\n        color: \"black\",\r\n        subtitle: `${((results.cand_9 / results.total) * 100).toFixed(2)}%`,\r\n      },\r\n      {\r\n        title: \"Xavier Hervas\",\r\n        bg: \"#ffcc29\",\r\n        color: \"black\",\r\n        subtitle: `${((results.cand_6 / results.total) * 100).toFixed(2)}%`,\r\n      },\r\n    ];\r\n  }\r\n\r\n  loadResults(): PresResult {\r\n    const [results] = alasql(\r\n      `\r\n              SELECT SUM(cand_1) cand_1, SUM(cand_6) cand_6, SUM(cand_9) cand_9, SUM(cand_12) cand_12, \r\n              SUM(cand_1 + cand_2 + cand_3 + cand_4 + cand_5 + cand_6 + cand_7 + cand_8 + cand_9 + cand_10 + cand_11 + cand_12 + cand_13 + cand_14 + cand_15 + cand_16) total\r\n              FROM provincia \r\n                JOIN canton ON canton.provinciaId = provincia.id\r\n                JOIN parroquia ON parroquia.cantonId = canton.id\r\n                JOIN zona ON zona.parroquiaId = parroquia.id\r\n                JOIN junta ON junta.zonaId = zona.id\r\n                JOIN res_presidente ON res_presidente.juntaId = junta.id;\r\n            `\r\n    );\r\n\r\n    return results;\r\n  }\r\n\r\n  protected paintFeature = (\r\n    layer: Layer,\r\n    name: string,\r\n    { total, ...results }: PresResult\r\n  ) => {\r\n    const order = Object.entries(results).sort((a, b) => b[1] - a[1]);\r\n\r\n    layer.bindTooltip(`\r\n          <h4><strong>${name}</strong></h4>\r\n          ${order\r\n            .map(\r\n              (entry, index) =>\r\n                `<p>${index + 1}°: ${PresidentMap[entry[0]]}, ${(\r\n                  (entry[1] / total) *\r\n                  100\r\n                ).toFixed(2)}% de votos.</p>`\r\n            )\r\n            .join(\"\")}\r\n        `);\r\n\r\n    //@ts-ignore\r\n    (layer as any).options.fillColor = this.props[presPropMap[order[0][0]]].bg;\r\n    (layer as any).options.fillOpacity = this.opacity;\r\n  };\r\n\r\n  processProvincias = (id: number) => {\r\n    const [results] = alasql(\r\n      `\r\n            SELECT SUM(cand_1) cand_1, SUM(cand_6) cand_6, SUM(cand_9) cand_9, SUM(cand_12) cand_12, \r\n            SUM(cand_1 + cand_2 + cand_3 + cand_4 + cand_5 + cand_6 + cand_7 + cand_8 + cand_9 + cand_10 + cand_11 + cand_12 + cand_13 + cand_14 + cand_15 + cand_16) total\r\n            FROM provincia \r\n              JOIN canton ON canton.provinciaId = provincia.id\r\n              JOIN parroquia ON parroquia.cantonId = canton.id\r\n              JOIN zona ON zona.parroquiaId = parroquia.id\r\n              JOIN junta ON junta.zonaId = zona.id\r\n              JOIN res_presidente ON res_presidente.juntaId = junta.id\r\n            WHERE provincia.id = ${id}\r\n            GROUP BY provinciaId;\r\n          `\r\n    );\r\n\r\n    return results;\r\n  };\r\n\r\n  processCantones = (id: number) => {\r\n    const [results] = alasql(\r\n      `\r\n              SELECT SUM(cand_1) cand_1, SUM(cand_6) cand_6, SUM(cand_9) cand_9, SUM(cand_12) cand_12, \r\n              SUM(cand_1 + cand_2 + cand_3 + cand_4 + cand_5 + cand_6 + cand_7 + cand_8 + cand_9 + cand_10 + cand_11 + cand_12 + cand_13 + cand_14 + cand_15 + cand_16) total\r\n              FROM canton\r\n                JOIN parroquia ON parroquia.cantonId = canton.id\r\n                JOIN zona ON zona.parroquiaId = parroquia.id\r\n                JOIN junta ON junta.zonaId = zona.id\r\n                JOIN res_presidente ON res_presidente.juntaId = junta.id\r\n              WHERE canton.id = ${id}\r\n              GROUP BY cantonId;\r\n            `\r\n    );\r\n\r\n    return results;\r\n  };\r\n}\r\n","import alasql from \"alasql\";\r\nimport { Layer } from \"leaflet\";\r\nimport { ColorBoxProps } from \"../components/ColorBox/ColorBox\";\r\nimport { HeatMap } from \"./heatmap\";\r\n\r\nconst TestMap: ((value: number) => boolean)[] = [\r\n  (value: number) => value < 25000,\r\n  (value: number) => value > 25000 && value < 50000,\r\n  (value: number) => value > 50000 && value < 100000,\r\n  (value: number) => value > 100000 && value < 250000,\r\n  (value: number) => value > 250000 && value < 500000,\r\n  (value: number) => value > 500000 && value < 1000000,\r\n  (value: number) => value > 1000000 && value < 2000000,\r\n  (value: number) => value > 2000000,\r\n];\r\n\r\nexport class PopulationHeatMap extends HeatMap<number> {\r\n  readonly props: ColorBoxProps[];\r\n\r\n  constructor() {\r\n    super();\r\n\r\n    this.props = [\r\n      {\r\n        title: \"0 - 25.000\",\r\n        bg: \"#DEEEF7\",\r\n        color: \"black\",\r\n        subtitle: `# de sufragantes`,\r\n      },\r\n      {\r\n        title: \"25.000 - 50.000\",\r\n        bg: \"#BDDDEF\",\r\n        color: \"black\",\r\n        subtitle: `# de sufragantes`,\r\n      },\r\n      {\r\n        title: \"50.000 - 100.000\",\r\n        bg: \"#8CC3E3\",\r\n        color: \"black\",\r\n        subtitle: `# de sufragantes`,\r\n      },\r\n      {\r\n        title: \"100.000 - 250.000\",\r\n        bg: \"#6BB2DB\",\r\n        color: \"black\",\r\n        subtitle: `# de sufragantes`,\r\n      },\r\n      {\r\n        title: \"250.000 - 500.000\",\r\n        bg: \"#2E8AC0\",\r\n        color: \"black\",\r\n        subtitle: `# de sufragantes`,\r\n      },\r\n      {\r\n        title: \"500.000 - 1'000.000\",\r\n        bg: \"#246B94\",\r\n        color: \"white\",\r\n        subtitle: `# de sufragantes`,\r\n      },\r\n      {\r\n        title: \"1'000.000 - 2'000.000\",\r\n        bg: \"#184763\",\r\n        color: \"white\",\r\n        subtitle: `# de sufragantes`,\r\n      },\r\n      {\r\n        title: \"2'000.000+\",\r\n        bg: \"#081821\",\r\n        color: \"white\",\r\n        subtitle: `# de sufragantes`,\r\n      },\r\n    ];\r\n  }\r\n\r\n  protected paintFeature = (layer: Layer, name: string, value: number) => {\r\n    layer.bindTooltip(`\r\n          <h4><strong>${name}</strong></h4>\r\n          <p># de sufragantes: ${value}</p>\r\n        `);\r\n\r\n    const index = TestMap.findIndex((test) => test(value));\r\n    //@ts-ignore\r\n    (layer as any).options.fillColor = this.props[index].bg;\r\n    (layer as any).options.fillOpacity = this.opacity;\r\n  };\r\n\r\n  processProvincias = (id: number) => {\r\n    const [results] = alasql(\r\n      `\r\n            SELECT SUM(cand_1 + cand_2 + cand_3 + cand_4 + cand_5 + cand_6 + cand_7 + cand_8 + cand_9 + cand_10 + cand_11 + cand_12 + cand_13 + cand_14 + cand_15 + cand_16 + blanco + nulo) total\r\n            FROM provincia \r\n              JOIN canton ON canton.provinciaId = provincia.id\r\n              JOIN parroquia ON parroquia.cantonId = canton.id\r\n              JOIN zona ON zona.parroquiaId = parroquia.id\r\n              JOIN junta ON junta.zonaId = zona.id\r\n              JOIN res_presidente ON res_presidente.juntaId = junta.id\r\n            WHERE provincia.id = ${id}\r\n            GROUP BY provinciaId;\r\n          `\r\n    );\r\n\r\n    return results.total;\r\n  };\r\n\r\n  processCantones = (id: number) => {\r\n    const [results] = alasql(\r\n      `\r\n              SELECT SUM(cand_1 + cand_2 + cand_3 + cand_4 + cand_5 + cand_6 + cand_7 + cand_8 + cand_9 + cand_10 + cand_11 + cand_12 + cand_13 + cand_14 + cand_15 + cand_16 + blanco + nulo) total\r\n              FROM canton\r\n                JOIN parroquia ON parroquia.cantonId = canton.id\r\n                JOIN zona ON zona.parroquiaId = parroquia.id\r\n                JOIN junta ON junta.zonaId = zona.id\r\n                JOIN res_presidente ON res_presidente.juntaId = junta.id\r\n              WHERE canton.id = ${id}\r\n              GROUP BY cantonId;\r\n            `\r\n    );\r\n\r\n    return results.total;\r\n  };\r\n}\r\n","import { HeatMapInfo } from \"../../models\";\r\nimport { HeatMapActionType } from \"./action-types\";\r\n\r\ntype Action = { type: HeatMapActionType; index: number; newValue: any };\r\n\r\nconst reorder = (state: HeatMapInfo[], action: Action) => {\r\n  const newState = [...state];\r\n  const [removed] = newState.splice(action.index, 1);\r\n  newState.splice(action.newValue, 0, removed);\r\n  return newState;\r\n};\r\n\r\nconst changeActive = (state: HeatMapInfo[], action: Action) => {\r\n  const newState = [...state];\r\n  newState[action.index].active = action.newValue;\r\n  return newState;\r\n};\r\n\r\nconst changeOpacity = (state: HeatMapInfo[], action: Action) => {\r\n  const newState = [...state];\r\n  newState[action.index].opacity = action.newValue;\r\n  return newState;\r\n};\r\n\r\nconst reducerMap: Record<HeatMapActionType, Function> = {\r\n  [HeatMapActionType.Reorder]: reorder,\r\n  [HeatMapActionType.ChangeActive]: changeActive,\r\n  [HeatMapActionType.ChangeOpacity]: changeOpacity,\r\n};\r\n\r\nexport const reducer = (\r\n  state: HeatMapInfo[],\r\n  action: Action\r\n): HeatMapInfo[] => {\r\n  return reducerMap[action.type]?.(state, action) || state;\r\n};\r\n","import { Box } from \"@chakra-ui/react\";\r\nimport React, { useReducer, useMemo } from \"react\";\r\nimport { ColorGuide, HeatMapSideBar, Map } from \"../../components\";\r\nimport { HeatMapType } from \"../../enums\";\r\nimport { HeatMapInfo } from \"../../models\";\r\nimport {\r\n  HeatMap,\r\n  PovertyHeatMap,\r\n  PresidentialResultsHeatMap,\r\n  PopulationHeatMap,\r\n} from \"../../heatmaps\";\r\nimport { reducer } from \"./heatmap-reducer\";\r\nimport { HeatMapActionType } from \"./action-types\";\r\n\r\nexport interface MapPageProps {}\r\n\r\nconst initialState: HeatMapInfo[] = [\r\n  {\r\n    type: HeatMapType.PresidentialResults,\r\n    title: \"Resultados presidenciales\",\r\n    active: true,\r\n    opacity: 1,\r\n  },\r\n  {\r\n    type: HeatMapType.Population,\r\n    title: \"# de sufragantes\",\r\n    active: false,\r\n    opacity: 1,\r\n  },\r\n  {\r\n    type: HeatMapType.Poverty,\r\n    title: \"Pobreza\",\r\n    active: false,\r\n    opacity: 1,\r\n  },\r\n];\r\n\r\nconst MapPage: React.FC<MapPageProps> = () => {\r\n  const [heatMapList, dispatch] = useReducer(reducer, initialState);\r\n  const heatMapMap = useMemo<Record<HeatMapType, HeatMap>>(\r\n    () => ({\r\n      [HeatMapType.Poverty]: new PovertyHeatMap(),\r\n      [HeatMapType.PresidentialResults]: new PresidentialResultsHeatMap(),\r\n      [HeatMapType.Population]: new PopulationHeatMap(),\r\n    }),\r\n    []\r\n  );\r\n  const firstHeatMap = useMemo(() => heatMapList.filter((hm) => hm.active)[0], [\r\n    heatMapList,\r\n  ]);\r\n\r\n  const handleReorder = (index: number, newValue: number) =>\r\n    dispatch({ type: HeatMapActionType.Reorder, index, newValue });\r\n  const handleActiveChange = (index: number, newValue: boolean) =>\r\n    dispatch({ type: HeatMapActionType.ChangeActive, index, newValue });\r\n  const handleOpacityChange = (index: number, newValue: number) =>\r\n    dispatch({ type: HeatMapActionType.ChangeOpacity, index, newValue });\r\n\r\n  heatMapList.forEach(({ type, opacity }) => {\r\n    const hm = heatMapMap[type];\r\n    hm.setOpacity(opacity);\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Box flex={1} d=\"flex\">\r\n        <HeatMapSideBar\r\n          heatMapList={heatMapList}\r\n          onReorder={handleReorder}\r\n          onActiveChange={handleActiveChange}\r\n          onOpacityChange={handleOpacityChange}\r\n        />\r\n        <Map heatMapList={heatMapList} heatMapMap={heatMapMap} />\r\n      </Box>\r\n      {firstHeatMap && <ColorGuide heatMap={heatMapMap[firstHeatMap.type]} />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MapPage;\r\n","export default __webpack_public_path__ + \"static/media/elecciones_provincia.b1b18fef.csv\";","export default __webpack_public_path__ + \"static/media/elecciones_circunscripcion.c6258590.csv\";","export default __webpack_public_path__ + \"static/media/elecciones_canton.c922d201.csv\";","export default __webpack_public_path__ + \"static/media/elecciones_parroquia.70665e28.csv\";","export default __webpack_public_path__ + \"static/media/elecciones_zona.208935dd.csv\";","export default __webpack_public_path__ + \"static/media/elecciones_junta.a0565549.csv\";","export default __webpack_public_path__ + \"static/media/elecciones_res_presidente.30a777ff.csv\";","export default __webpack_public_path__ + \"static/media/pobreza_cantones.391a527d.csv\";","export default __webpack_public_path__ + \"static/media/pobreza_parroquias.ca411e9e.csv\";","import * as Papa from \"papaparse\";\r\nimport provinciaCsv from \"../data/elecciones_provincia.csv\";\r\nimport circunscripcionCsv from \"../data/elecciones_circunscripcion.csv\";\r\nimport cantonCsv from \"../data/elecciones_canton.csv\";\r\nimport parroquiaCsv from \"../data/elecciones_parroquia.csv\";\r\nimport zonaCsv from \"../data/elecciones_zona.csv\";\r\nimport juntaCsv from \"../data/elecciones_junta.csv\";\r\nimport resultadosCsv from \"../data/elecciones_res_presidente.csv\";\r\nimport pobCantonesCsv from \"../data/pobreza_cantones.csv\";\r\nimport pobParroquiasCsv from \"../data/pobreza_parroquias.csv\";\r\nimport { Table } from \"../enums\";\r\nimport alasql from \"alasql\";\r\nimport tablesSQL from \"../data/tables.sql\";\r\n\r\ninterface TableData {\r\n  table: Table;\r\n  path: string;\r\n}\r\n\r\nconst data: TableData[] = [\r\n  {\r\n    table: Table.Provincia,\r\n    path: provinciaCsv,\r\n  },\r\n  {\r\n    table: Table.Circunscripcion,\r\n    path: circunscripcionCsv,\r\n  },\r\n  {\r\n    table: Table.Canton,\r\n    path: cantonCsv,\r\n  },\r\n  {\r\n    table: Table.Parroquia,\r\n    path: parroquiaCsv,\r\n  },\r\n  {\r\n    table: Table.Zona,\r\n    path: zonaCsv,\r\n  },\r\n  {\r\n    table: Table.Junta,\r\n    path: juntaCsv,\r\n  },\r\n  {\r\n    table: Table.ResPresidente,\r\n    path: resultadosCsv,\r\n  },\r\n  {\r\n    table: Table.PobCantones,\r\n    path: pobCantonesCsv,\r\n  },\r\n  {\r\n    table: Table.PobParroquias,\r\n    path: pobParroquiasCsv,\r\n  },\r\n];\r\n\r\nasync function parseData(data: TableData): Promise<any[]> {\r\n  return new Promise((res, error) => {\r\n    Papa.parse(data.path, {\r\n      download: true,\r\n      header: true,\r\n      dynamicTyping: true,\r\n      complete: function (results) {\r\n        res(results.data);\r\n      },\r\n      error,\r\n    });\r\n  });\r\n}\r\n\r\nexport async function initDb() {\r\n  alasql(tablesSQL);\r\n\r\n  for (const table of data) {\r\n    (alasql as any).tables[table.table].data = await parseData(table);\r\n    alasql(`CREATE INDEX ${table.table}_id ON ${table.table} (id)`);\r\n    alasql(`REINDEX ${table.table}_id`);\r\n\r\n    const obj = (alasql as any).tables[table.table].data[0];\r\n    const foreignKeys = Object.keys(obj).filter((key) => key.endsWith(\"Id\"));\r\n    for (const foreignKey of foreignKeys) {\r\n      alasql(\r\n        `CREATE INDEX ${table.table}_${foreignKey} ON ${table.table} (${foreignKey})`\r\n      );\r\n      alasql(`REINDEX ${table.table}_${foreignKey}`);\r\n    }\r\n  }\r\n}\r\n","import { ChakraProvider, extendTheme, Text } from \"@chakra-ui/react\";\r\nimport { Layout } from \"../../components\";\r\nimport { colors, fonts, styles } from \"../../theme\";\r\nimport { DiagramPage } from \"../DiagramPage\";\r\nimport { MapPage } from \"../MapPage\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Page } from \"../../enums\";\r\nimport { initDb } from \"../../bin\";\r\n\r\nconst theme = extendTheme({ colors, fonts, styles });\r\n\r\nconst pages = {\r\n  [Page.MapPage]: <MapPage />,\r\n  [Page.DiagramPage]: <DiagramPage />,\r\n};\r\n\r\nfunction App() {\r\n  const [ready, setReady] = useState(false);\r\n  const [page, setPage] = useState(Page.MapPage);\r\n  useEffect(() => {\r\n    initDb().then(() => setReady(true));\r\n  }, []);\r\n  return (\r\n    <ChakraProvider theme={theme}>\r\n      {ready ? (\r\n        <Layout currentPage={page} onPageChange={setPage}>\r\n          {pages[page]}\r\n        </Layout>\r\n      ) : (\r\n        <Text>Cargando...</Text>\r\n      )}\r\n    </ChakraProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","export const colors = {\r\n  brand: {\r\n    50: \"#edfbe3\",\r\n    100: \"#d4efbf\",\r\n    200: \"#b9e39a\",\r\n    300: \"#9ed873\",\r\n    400: \"#83cc4c\",\r\n    500: \"#69b333\",\r\n    600: \"#518b26\",\r\n    700: \"#3a6319\",\r\n    800: \"#203d0c\",\r\n    900: \"#061600\",\r\n  },\r\n};\r\n","export const fonts = {\r\n  body: \"Open Sans\",\r\n  heading: \"Open Sans\",\r\n  mono: \"Menlo, monospace\",\r\n};\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { App } from \"./containers\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}